{"body":"stats.dart\r\n==========\r\n\r\n#### Dart Performance Monitor ####\r\n\r\nThis class provides a simple info box that will help you monitor your code performance.\r\n\r\n* **FPS** Frames rendered in the last second. The higher the number the better.\r\n* **MS** Milliseconds needed to render a frame. The lower the number the better.\r\n\r\n### Screenshots ###\r\n\r\n![stats_js_fps.png](http://financeCoding.github.com/stats.dart/assets/stats_dart_fps.png)\r\n![stats_js_ms.png](http://financeCoding.github.com/stats.dart/assets/stats_dart_ms.png)\r\n\r\n### Live Example ###\r\n\r\n[example](http://financeCoding.github.com/stats.dart/examples/basic/statsdart.html)\r\n\r\n### Usage ###\r\n\r\n```dart\r\n#import('dart:html');\r\n#import('../../src/stats.dart');\r\nvoid main() {\r\n  Stats stats = new Stats();\r\n  document.body.elements.add(stats.container);\r\n  CanvasElement canvas = new CanvasElement();\r\n  canvas.width = 512;\r\n  canvas.height = 512;\r\n  document.body.elements.add(canvas);\r\n  CanvasRenderingContext2D context = canvas.getContext('2d');\r\n  context.fillStyle = 'rgba(127,0,255,0.05)';\r\n  \r\n  draw(time) {\r\n    context.clearRect(0, 0, 512, 512);\r\n\r\n    stats.begin();\r\n\r\n    for (var i = 0; i < 2000; i++) {\r\n\r\n      var x = Math.cos(time + i * 0.01) * 196 + 256;\r\n      var y = Math.sin(time + i * 0.01234) * 196 + 256;\r\n\r\n      context.beginPath();\r\n      context.arc(x, y, 10, 0, Math.PI * 2, true);\r\n      context.fill();\r\n\r\n    }\r\n\r\n    stats.end();\r\n    window.requestAnimationFrame(draw);\r\n  }\r\n  \r\n  window.requestAnimationFrame(draw);\r\n}\r\n```\r\n\r\n### Thanks ###\r\n[mrdoob](http://mrdoob.github.com/stats.js/) for the stats.js code. \r\n","google":"UA-33800934-2","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Stats.dart","tagline":"Simple stat counter in dart"}